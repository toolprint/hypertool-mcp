name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'guides/**'
      - 'research/**'
  push:
    branches-ignore:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Pre-publish checks
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create test results directory
        run: mkdir -p test-results
      
      # Parallel execution of main validation tasks
      - name: Run parallel validation tasks
        run: |
          # Start all tasks in background
          npm run build &
          npm run test:ci &
          npx tsc --noEmit &
          npm run lint &
          
          # Wait for all background jobs to complete
          wait
          
          echo "✅ All parallel validation tasks completed successfully"
      
      - name: Format check
        run: |
          echo "Checking code formatting..."
          npm run format:check || (echo "❌ Code formatting issues found. Run 'npm run format' to fix." && exit 1)
      
      - name: Lint markdown files
        run: |
          echo "Linting Markdown files..."
          markdownlint-cli2 "**/*.md" "#node_modules" "#.git" || echo "Markdownlint not available, skipping Markdown linting"
      
      # Upload test results
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30
      
      # Display test results in PR
      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: test-results/junit.xml
          reporter: java-junit
          fail-on-error: true
      
      - name: Validation complete
        run: echo "✅ All pre-publish checks passed! PR is ready for review."